services:
  go-api-demo-db:
    container_name: go-api-demo-db
    image: mysql:9.1
    ports:
      - "3306:3306"
    environment:
      PS1: "\\u@\\h:\\w\\$$ "
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "go_api_demo"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"

  go-api-demo-prometheus:
    container_name: go-api-demo-prometheus
    image: prom/prometheus:v3.0.1
    restart: always
    volumes:
      - ../prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  go-api-demo-grafana:
    container_name: go-api-demo-grafana
    image: grafana/grafana:11.3.1
    volumes:
      - ../grafana/config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ../grafana/config/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ../grafana/storage:/var/lib/grafana
      - ../grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3456:3000"

  go-api-demo-otel-collector:
    container_name: go-api-demo-otel-collector
    image: otel/opentelemetry-collector:0.114.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ../otel/otel-collector-config.yml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - go-api-demo-jaeger

  go-api-demo-jaeger:
    container_name: go-api-demo-jaeger
    image: jaegertracing/all-in-one:1.63.0
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  go-api-demo-zookeeper:
    container_name: go-api-demo-zookeeper
    image: debezium/zookeeper:3.0.0.Final
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  go-api-demo-kafka:
    container_name: go-api-demo-kafka
    image: debezium/kafka:3.0.0.Final
    ports:
      - "9092:9092"
    environment:
      - ADVERTISED_HOST_NAME=${HOST_IP}
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - ZOOKEEPER_CONNECT=go-api-demo-zookeeper:2181

  go-api-demo-connect:
    container_name: go-api-demo-connect
    image: debezium/connect:3.0.0.Final
    build:
      context: ../../
      dockerfile: docker/connect/Dockerfile
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=go-api-demo-kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=mysql.go_api_demo.configs
      - OFFSET_STORAGE_TOPIC=mysql.go_api_demo.offsets
      - STATUS_STORAGE_TOPIC=mysql.go_api_demo.statuses
      - INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    depends_on:
      - go-api-demo-db
      - go-api-demo-kafka

  go-api-demo-kowl:
    container_name: go-api-demo-kowl
    image: quay.io/cloudhut/kowl:master
    restart: always
    ports:
      - "8080:8080"
    environment:
      - CONFIG_FILEPATH=/app/config/config.yaml
    volumes:
      - ../kowl:/app/config
    depends_on:
      - go-api-demo-kafka
      - go-api-demo-schema-registry

  go-api-demo-redis:
    container_name: go-api-demo-redis
    command: redis-server --requirepass pass
    image: redis:7.4
    ports:
      - "6379:6379"

  go-api-demo-elasticsearch:
    container_name: go-api-demo-elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false      
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"

  go-api-demo-schema-registry:
    container_name: go-api-demo-schema-registry
    image: confluentinc/cp-schema-registry:7.7.1
    build:
      context: ../../
      dockerfile: docker/schema/Dockerfile
    ports:
      - "8181:8181"
      - "8081:8081"
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://go-api-demo-kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=go-api-demo-schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://go-api-demo-schema-registry:8081
