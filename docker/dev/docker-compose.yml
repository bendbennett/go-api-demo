version: '3'

services:
  go-api-demo-db:
    container_name: go-api-demo-db
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      PS1: "\\u@\\h:\\w\\$$ "
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "go-api-demo"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"

  go-api-demo-prometheus:
    container_name: go-api-demo-prometheus
    image: prom/prometheus:v2.30.3
    volumes:
      - ../prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"

  go-api-demo-grafana:
    container_name: go-api-demo-grafana
    image: grafana/grafana:8.2.2
    volumes:
      - ../grafana/config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ../grafana/config/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ../grafana/storage:/var/lib/grafana
      - ../grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3456:3000"

  go-api-demo-jaeger:
    container_name: go-api-demo-jaeger
    image: jaegertracing/all-in-one:1.27
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  go-api-demo-zookeeper:
    container_name: go-api-demo-zookeeper
    image: debezium/zookeeper:1.7
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  go-api-demo-kafka:
    container_name: go-api-demo-kafka
    image: debezium/kafka:1.7
    ports:
      - "9092:9092"
    environment:
      - ADVERTISED_HOST_NAME=${HOST_IP}
      - ZOOKEEPER_CONNECT=go-api-demo-zookeeper:2181

  go-api-demo-connect:
    container_name: go-api-demo-connect
    build:
      context: ../../
      dockerfile: docker/connect/Dockerfile
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=go-api-demo-kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=go_api_demo_configs
      - OFFSET_STORAGE_TOPIC=go_api_demo_offsets
      - STATUS_STORAGE_TOPIC=go_api_demo_statuses
    depends_on:
      - go-api-demo-db
      - go-api-demo-kafka

  go-api-demo-kowl:
    container_name: go-api-demo-kowl
    image: quay.io/cloudhut/kowl:master
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=go-api-demo-kafka:9092

  go-api-demo-redis:
    container_name: go-api-demo-redis
    command: redis-server --requirepass pass
    image: redis:6.2
    ports:
      - "6379:6379"

  go-api-demo-elasticsearch:
    container_name: go-api-demo-elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
